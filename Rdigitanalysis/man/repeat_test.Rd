% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repeat_test.R
\name{repeat_test}
\alias{repeat_test}
\title{Performs repeat test or sector effect test}
\usage{
repeat_test(
  digitdata,
  data_columns = "all",
  duplicate_matching_cols,
  break_out = NA,
  sector_column = NA,
  sector_grouping = NA,
  failure_factor = 3
)
}
\arguments{
\item{digitdata}{A object of class \code{DigitAnalysis}.}

\item{data_columns}{The names of numeric columns of data to be analyzed. Default can be 'all', where using all data columns in \code{numbers} df in \code{digitdata};
an array of column names, as characters; a single column name, as character.}

\item{duplicate_matching_cols}{The names of data columns two rows need to match exactly in order to be defined as a repeat}

\item{break_out}{The data column (non-numeric!) to split up the dataset based on different categories in the column if specified as an character. Default to NA.}

\item{sector_column}{The column for splitting the data into sectors for separate analysis. Default to NA.
\itemize{
  \item If it is specified (not NA), then a sectorized test will be performed instead of a normal repeat test
}}

\item{sector_grouping}{A list of arrays
\itemize{
  \item Each the names of the elements in the list is the sector name
  \item Each array contains the categories belonging to that sector
}}

\item{failure_factor}{NEED TO EDIT LATER}
}
\value{
\itemize{
  \item A table of p-values for repeat test on each category possibly also on sector
  \item Plots for each category if \code{plot = TRUE}
  \item If NaN is in returned table, it means that there are no occurances of the data of the sector in that category --> 0/0 in percentage
}
}
\description{
Performs repeat test or sector effect test
}
\examples{
repeat_test(digitdata, data_columns='all', duplicate_matching_cols=c('col_name1, col_name2'))
repeat_test(digitdata, data_columns='all', duplicate_matching_cols=c('col_name1, col_name2'), break_out='col_name')
repeat_test(digitdata, data_columns=c('col_name1', 'col_name2'), duplicate_matching_cols=c('col_name3, col_name4'))
repeat_test(digitdata, data_columns='all', duplicate_matching_cols=c('col_name3, col_name4'), break_out='col_name',
sector_column='sector_name', sector_grouping=list('sector 1'=c('a'), 'sector 2'=c('b', 'c')), failure_factor=3)
}
